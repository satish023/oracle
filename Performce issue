
Performce issue.:
===================
Narrow down the issue

Ask app team belo question.
--------------------------------
1 - Job is running or not ?
2 - Is any changes happned or not in job code ?
3 - Ask them share SID / SQL_ID / Username / 
4 - Ask them to share current has planve value for thait SQL_ID.

========================================================================================
1 - Check CPU -> top 
2 - Check memory usage -> free -m
3 - Check database alert log
 
High memory consumption
HiGH CPU CONSUMPTION
 
4 - JOBS CURRENTLY RUNNING DATABASE (ACTIVE)
----------------------------------------------
set lines 300
set pages 200
col USERNAME for a40
SELECT s.inst_id,
       s.sid,
       s.serial#,
       --s.sql_id,
       p.spid,
       s.username,
       s.program,
	   s.status
FROM   gv$session s
       JOIN gv$process p ON p.addr = s.paddr AND p.inst_id = s.inst_id
WHERE  s.type != 'BACKGROUND' and s.status='ACTIVE';


Check user and SID:
-------------------
SQL> select sid, serial#, Status, username, inst_id, sql_id,SQL_HASH_VALUE from gv$session where sql_id='fxur1aa3g2u7w';

  SID SERIAL# STATUS   USERNAME                INST_ID SQL_ID        SQL_HASH_VALUE
----- ------- -------- -------------------- ---------- ------------- --------------
 1016   37152 ACTIVE   SVB_ETL                       2 fxur1aa3g2u7w     2263967996


Check Event:
--------------
set linesize 30000
select sid, serial#,username ,status,sql_id, event from gv$session where username='SVB_ETL';

  SID SERIAL# USERNAME             STATUS   SQL_ID        EVENT
----- ------- -------------------- -------- ------------- ----------------------------------------------------------------
 1016   37152 SVB_ETL              ACTIVE   fxur1aa3g2u7w PGA memory operation


Table Stale state:
-------------------
col TABLE_NAME for a30
col OWNER for a20
SELECT table_name, owner, stale_stats
FROM dba_tab_statistics
WHERE stale_stats = 'YES'
AND table_name IN (
    SELECT object_name
    FROM v$sql_plan
    WHERE sql_id = 'fxur1aa3g2u7w'
    AND object_type = 'TABLE'
);



===================================================================================================================================================================

Step 1: To Check  Long running session :
=======================================
set lines 1000 pages 9999
column sid format 9999
column serial for 999999
column status format a15
column username format a10
column sql_text format a80
column module format a30
col program for a30
col SQL_EXEC_START for a20
SELECT * FROM
(SELECT status,inst_id,sid,SESSION_SERIAL# as Serial,username,sql_id,SQL_PLAN_HASH_VALUE,
MODULE,program,
TO_CHAR(sql_exec_start,'dd-mon-yyyy hh24:mi:ss') AS sql_exec_start,
ROUND(elapsed_time/1000000)                      AS "Elapsed (s)",
ROUND(cpu_time    /1000000)                      AS "CPU (s)",
substr(sql_text,1,30) sql_text
FROM gv$sql_monitor where status='EXECUTING' and module not like '%emagent%'
ORDER BY sql_exec_start  desc
);

---------------------------------------------------------------------------------------------------------------------------------------------------------------
select sid,SQL_ID,SERIAL#,SQL_PLAN_HASH_VALUE,inst_id,opname,totalwork,sofar,start_time,time_remaining
from gv$session_longops
where totalwork<>sofar
/

Step 2 : To check blocking session:
==================================
a) select inst_id, sid, serial#,type,username, sql_id, event, blocking_instance, blocking_session from gv$session where blocking_session is not null;
---------------------------------------------------------------------------------------------------------------------------------------------------------------
b) SELECT
s.inst_id,
s.blocking_session,
s.sid,
s.serial#,
s.seconds_in_wait
FROM
gv$session s
WHERE
blocking_session IS NOT NULL;
 
c) Details of Blocking Session:
----------------------------------
COLUMN sess format A15
Set lines 200 pages 1000
col BLOCK for 999
col lmode for 999
col CTIME for 99999
col REQUEST for 999
col USERNAME for a9
col STATUS for a8
col ID1 for 999999999
col ID2 for 9999999
col SERIAL# for 99999
Col MACHINE for a15
SELECT a.inst_id,substr(DECODE(request,0,'Holder: ','Waiter: ')||a.sid,1,12) sess, b.serial#, a.lmode,a.request,a.
block, a.ctime, b.username, b.status, b.sql_id, b.ROW_WAIT_OBJ#,b.MACHINE,b.logon_time
from    gv$session b,
        (select distinct b.*
        from    gv$lock a,
                gv$lock b
        where   a.id1 = b.id1
        and     a.id2 = b.id2
        and     a.request > 0) a
where   a.sid = b.sid
and     a.inst_id = b.inst_id
order by a.id1, a.id2, a.block desc, ctime
/


INST_ID SESS            SERIAL# LMODE REQUEST BLOCK  CTIME USERNAME  STATUS  SQL_ID        ROW_WAIT_OBJ# MACHINE         LOGON_TIME
---------- --------------- -------- ------- ----- ------ --------- -------- ------------- ------------- --------------- -------------------
1 Holder:
1 Waiter:
 
d) Based on the above query, Get the more details about the main Holder session by using below query:
-------------------------------------------------------------------------------------------------------
SELECT SID,SERIAL#,USERNAME,TERMINAL,PROGRAM,OSUSER,SQL_ID,
LOGON_TIME,
ROUND((SYSDATE-LOGON_TIME)*(24*60),1) as MINUTES_LOGGED_ON,
ROUND(LAST_CALL_ET/60,1) as Minutes_FOR_CURRENT_SQL
From v$session
WHERE  SID='&sid';
 
e) Get the SQL_TEXT executed by the above Holder Session:
-----------------------------------------------------------
set long 10000
select sql_fulltext from v$sql where sql_id='';    (Put SQL_ID from  Query B for Holder Session )

f) Kill sesions confirmed by App team 
--------------------------------------
1. To kill particuler session
-----------------------------
ALTER SYSTEM KILL SESSION 'sid,serial#' IMMEDIATE; 

2. Check inactive Session:
---------------------------
SELECT s.inst_id,
       s.sid,
       s.serial#,
       --s.sql_id,
       p.spid,
       s.username,
       s.program,
	   s.status
FROM   gv$session s
       JOIN gv$process p ON p.addr = s.paddr AND p.inst_id = s.inst_id
WHERE  s.type != 'BACKGROUND' and s.status='INACTIVE';


3. To kill all inactive session
--------------------------------
select 'alter system kill session ' || '''' || sid || ',' || serial# ||',@'|| inst_id || '''' || ' immediate;' from gv$session where username='svc.sdp-connect'  and   status='INACTIVE' and type = 'USER' ; 
 
 
Step 3:  Locks present in the database:
=======================================
col session_id head 'Sid' form 9999
col object_name head "Table|Locked" form a30
col oracle_username head "Oracle|Username" form a10 truncate
col os_user_name head "OS|Username" form a10 truncate
col process head "Client|Process|ID" form 99999999
col mode_held form a15
select lo.session_id,lo.oracle_username,lo.os_user_name,
lo.process,do.object_name,
decode(lo.locked_mode,0, 'None',1, 'Null',2, 'Row Share (SS)',
3, 'Row Excl (SX)',4, 'Share',5, 'Share Row Excl (SSX)',6, 'Exclusive',
to_char(lo.locked_mode)) mode_held
from v$locked_object lo, dba_objects do
where lo.object_id = do.object_id
order by 1,5
/

Step 4: To check Plan Hash value
================================
a) select session_id,session_serial#,min(sample_time) start_time,max(sample_time) end_time ,max(sample_time)-min(sample_time) diff,sql_id,sql_plan_hash_value
from dba_hist_active_sess_history
where sql_id='7qbk73wv0gy7q' group by session_id,session_serial#,sql_id,sql_plan_hash_value order by start_time desc;


1. Query the V$SQL view: This view contains information about SQL statements that are currently in the shared pool. 
------------------------
SELECT sql_id, plan_hash_value, executions, last_load_time
FROM v$sql
WHERE sql_id = '7qbk73wv0gy7q';
 
2. Check for multiple plan hash values: If the PLAN_HASH_VALUE changes, it indicates that the execution plan has changed.
---------------------------------------
SELECT sql_id, COUNT(DISTINCT plan_hash_value) AS plan_count
FROM v$sql
WHERE sql_id = 'fxur1aa3g2u7w'
GROUP BY sql_id;
 
3. Historical data: Use the DBA_HIST_SQLSTAT and DBA_HIST_SQL_PLAN views to check historical execution plans.
-------------------
SELECT sql_id, plan_hash_value, COUNT(*)
FROM dba_hist_sqlstat
WHERE sql_id = '7qbk73wv0gy7q'
GROUP BY sql_id, plan_hash_value;


STEP 5: Run SQL Advisor
========================
a)
@?/rdbms/admin/sqltrpt

Specify the Sql id
~~~~~~~~~~~~~~~~~~
Enter value for sqlid: 7qbk73wv0gy7q

Sql Id specified: 7qbk73wv0gy7q

             -OR- 
			 
b)
1. Create Tuning Task
-------------------------
DECLARE
l_sql_tune_task_id VARCHAR2(100);
BEGIN
l_sql_tune_task_id := DBMS_SQLTUNE.create_tuning_task (
sql_id => 'bwcgh7gjqfw2h',
scope => DBMS_SQLTUNE.scope_comprehensive,
time_limit => 500,
task_name => 'bwcgh7gjqfw2h_tuning_task11',
description => 'Tuning task1 for statement bwcgh7gjqfw2h');
DBMS_OUTPUT.put_line('l_sql_tune_task_id: ' || l_sql_tune_task_id);
END;
/

2. Execute Tuning task:
------------------------
EXEC DBMS_SQLTUNE.execute_tuning_task(task_name => '762ctbzpdq1sy_tuning_task11');
 
3. Get the Tuning advisor report.
---------------------------------
set long 65536
set longchunksize 65536
set linesize 100
select dbms_sqltune.report_tuning_task('762ctbzpdq1sy_tuning_task11') from dual;
 
4. Get list of tuning task present in database:
------------------------------------------------
We can get the list of tuning tasks present in database from DBA_ADVISOR_LOG
 
SELECT TASK_NAME, STATUS FROM DBA_ADVISOR_LOG WHERE TASK_NAME ;
 
5. Drop a tuning task:
-----------------------
execute dbms_sqltune.drop_tuning_task('87s8z2zzpsg88_tuning_task11');

============================================================================================================================================
To table are stale state :
---------------------------

setlines 200 
col owner for a12 
col table_name for a21 
select owner,TABLE_NAME,STATS_UPDATE_TIME from 
dba_tab_stats_history where table_name='&TABLE_NAME'; 

Gather stat of table:
---------------------
exec dbms_stats.gather_table_stats(ownname=>'PSGL',tabname=>'PS_SVB_MAP_P_ACCT',estimate_percent=>DBMS_STATS.AUTO_SAMPLE_SIZE,cascade=>TRUE,degree =>8);


=================================================================================================================================================================================


